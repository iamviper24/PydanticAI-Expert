PydanticAI
pydantic/pydantic-ai
Introduction
Installation
Installation
Table of contents
Use with Pydantic Logfire
Running Examples
Slim Install
Getting Help
Contributing
Troubleshooting
Upgrade Guide
Documentation
Documentation
Agents
Models
Models
OpenAI
Anthropic
Gemini
Google
Bedrock
Cohere
Groq
Mistral
Dependencies
Function Tools
Common Tools
Output
Messages and chat history
Unit testing
Debugging and Monitoring
Multi-agent Applications
Graphs
Evals
Image, Audio, Video & Document Input
Thinking
Direct Model Requests
MCP
MCP
Client
Server
MCP Run Python
A2A
Command Line Interface (CLI)
Examples
Examples
Pydantic Model
Weather agent
Bank support
SQL Generation
Flight booking
RAG
Stream markdown
Stream whales
Chat App with FastAPI
Question Graph
Slack Lead Qualifier with Modal
API Reference
API Reference
pydantic_ai.agent
pydantic_ai.tools
pydantic_ai.common_tools
pydantic_ai.output
pydantic_ai.result
pydantic_ai.messages
pydantic_ai.exceptions
pydantic_ai.settings
pydantic_ai.usage
pydantic_ai.mcp
pydantic_ai.format_as_xml
pydantic_ai.format_prompt
pydantic_ai.direct
pydantic_ai.models
pydantic_ai.models.openai
pydantic_ai.models.anthropic
pydantic_ai.models.bedrock
pydantic_ai.models.cohere
pydantic_ai.models.gemini
pydantic_ai.models.google
pydantic_ai.models.groq
pydantic_ai.models.instrumented
pydantic_ai.models.mistral
pydantic_ai.models.test
pydantic_ai.models.function
pydantic_ai.models.fallback
pydantic_ai.models.wrapper
pydantic_ai.models.mcp_sampling
pydantic_ai.profiles
pydantic_ai.providers
pydantic_graph
pydantic_graph.nodes
pydantic_graph.persistence
pydantic_graph.mermaid
pydantic_graph.exceptions
pydantic_evals.dataset
pydantic_evals.evaluators
pydantic_evals.reporting
pydantic_evals.otel
pydantic_evals.generation
fasta2a
Table of contents
Use with Pydantic Logfire
Running Examples
Slim Install
Installation
PydanticAI is available on PyPI as
pydantic-ai
so installation is as simple as:
pip
uv
pip
install
pydantic-ai
uv
add
pydantic-ai
(Requires Python 3.9+)
This installs the
pydantic_ai
package, core dependencies, and libraries required to use all the models
included in PydanticAI. If you want to use a specific model, you can install the
"slim"
version of PydanticAI.
Use with Pydantic Logfire
PydanticAI has an excellent (but completely optional) integration with
Pydantic Logfire
to help you view and understand agent runs.
To use Logfire with PydanticAI, install
pydantic-ai
or
pydantic-ai-slim
with the
logfire
optional group:
pip
uv
pip
install
"pydantic-ai[logfire]"
uv
add
"pydantic-ai[logfire]"
From there, follow the
Logfire setup docs
to configure Logfire.
Running Examples
We distribute the
pydantic_ai_examples
directory as a separate PyPI package (
pydantic-ai-examples
) to make examples extremely easy to customize and run.
To install examples, use the
examples
optional group:
pip
uv
pip
install
"pydantic-ai[examples]"
uv
add
"pydantic-ai[examples]"
To run the examples, follow instructions in the
examples docs
.
Slim Install
If you know which model you're going to use and want to avoid installing superfluous packages, you can use the
pydantic-ai-slim
package.
For example, if you're using just
OpenAIModel
, you would run:
pip
uv
pip
install
"pydantic-ai-slim[openai]"
uv
add
"pydantic-ai-slim[openai]"
pydantic-ai-slim
has the following optional groups:
logfire
— installs
logfire
PyPI ↗
evals
— installs
pydantic-evals
PyPI ↗
openai
— installs
openai
PyPI ↗
vertexai
— installs
google-auth
PyPI ↗
and
requests
PyPI ↗
anthropic
— installs
anthropic
PyPI ↗
groq
— installs
groq
PyPI ↗
mistral
— installs
mistralai
PyPI ↗
cohere
- installs
cohere
PyPI ↗
duckduckgo
- installs
duckduckgo-search
PyPI ↗
tavily
- installs
tavily-python
PyPI ↗
See the
models
documentation for information on which optional dependencies are required for each model.
You can also install dependencies for multiple models and use cases, for example:
pip
uv
pip
install
"pydantic-ai-slim[openai,vertexai,logfire]"
uv
add
"pydantic-ai-slim[openai,vertexai,logfire]"